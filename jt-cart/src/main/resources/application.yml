server:
  port: 8094
  servlet:
    context-path: /
spring:
  datasource:
    #引入druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/jtdb?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&autoReconnect=true&allowMultiQueries=true
    username: root
    password: root
    druid:
      # 监控统计用的stat,防御sql注入的wall,日志用的slf4j
      filter: stat,wall,slf4j
      # 初始化大小，最小，最大
      initial-size: 5
      min-idle: 5
      max-active: 100
      # 获取连接最大等待时间，
      max-wait: 10000
      # 配置多久时间检测一次需要关闭的空闲连接
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小的生存时间
      min-evictable-idle-time-millis: 30000
      # 验证连接有效与否的SQL
      validation-query: SELECT 1 FROM DUAL
      #
      test-while-idle: true
      test-on-borrow: true
      test-on-return: false
      # 打开PSCache,并指定每个连接中的PSCache大小
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20




    #配置rabbitMq 服务器
#  rabbitmq:
#    host: 192.168.189.130
#    port: 5672
#    username: admin
#    password: admin
    #虚拟host 可以不设置,使用server默认host
    #virtual-host: /

# 详细配置：https://blog:csdn:net/xionglangs/article/details/81507617
  kafka:
    # 指定kafka 代理地址，可以多个
    bootstrap-servers: 192.168.189.130:9092,192.168.189.130:9093,192.168.189.130:9094
    producer:
      retries: 0
      # 每次批量发送消息的数量
      batch-size: 16384
      buffer-memory: 33554432
      # 指定消息key和消息体的编解码方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      # 指定默认消费者group id
      group-id: test-group
      auto-offset-reset: earliest
      enable-auto-commit: false
      # 自动提交时间间隔
      auto-commit-interval: 100
      # 指定消息key和消息体的编解码方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer


  mvc:
    view:
      prefix: /WEB-INF/views/
      suffix: .jsp
#mybatis-plush配置
mybatis-plus:
  type-aliases-package: com.jt.pojo
  mapper-locations: classpath:/mybatis/mappers/*.xml
  configuration:
    map-underscore-to-camel-case: true

logging:
  level: 
    com.jt.mapper: debug

#关于Dubbo配置
dubbo:
  scan:
    basePackages: com.jt    #指定dubbo的包路径 扫描dubbo注解
  application:              #应用名称
    name: provider-cart     #一个接口对应一个服务名称   一个接口可以有多个实现
  registry:  #注册中心 用户获取数据从机中获取 主机只负责监控整个集群 实现数据同步
    address: zookeeper://192.168.189.130:21811
  protocol:  #指定协议
    name: dubbo  #使用dubbo协议(tcp-ip)  web-controller直接调用sso-Service
    port: 20882  #每一个服务都有自己特定的端口 不能重复.